// variables 64 data
@function -asset-data($data) {
	@return url("data:image/svg+xml;base64, #{$data}");
}

// input field box shadow
@function box-shadow($color, $offset-y: 5px, $blur-radius: 10px) {
	@return inset 0 0 0 30px #fff, 0 $offset-y $blur-radius 0 $color;
}

@function unicode($str) {
	@return unquote("\"") + unquote(str-insert($str, "\\", 1)) + unquote("\"");
}

@function themed($key) {
	@if $theme-map == null {
		@warn "This Theming Key is not surrounded by theme-map (themify): `#{$key}`.";
	}
	@return map-get($theme-map, $key);
}

@function get-icon($query) {
	$position: index($icon-values, $query);
	$query-key: nth($icon-keys, $position);
	@return unicode($query-key);
}

@function merge-classes($classes) {
	$selector: '';
	@if length($classes) > 1 {
		@each $name in $classes {
			$selector: "&.#{$name}, #{$selector}";
		}
	}
	@else {
		$selector: "&.#{$classes}";
	}
	@return $selector;
}

// when the number is bigger than the max it become the max
// when the number is smaller than the min it become the min
// limit($number, 1, 5) == [...,1,1,1,1,1,2,3,4,5,5,5,5,...]
@function limit($number, $min, $max) {
	$result: $number;
	@if ($number < $min) {
		$result: $min,
	} @else if ($number > $max) {
		$result: $max,
	}
	@return $result;
}

// when the number is bigger/smaller than the max/1 start repeating
// limit-loop($number, 5) == [...,1,2,3,4,5,1,2,3,4,5,...]
@function limit-loop($number, $max) {
	$result: $number % $max;
	@if ($result == 0) {
		$result: $max;
	}
	@return $result;
}

@function themed($key) {
	@if $theme-map == null {
		@warn "This Theming Key is not surrounded by theme-map (themify): `#{$key}`.";
	}
	@return map-get($theme-map, $key);
}